#!/usr/bin/env perl
use strict;
use warnings;

use App::DDup -run_script;

our $VERSION = '0.001';

1;
__END__

=pod
  
=head1 NAME

ddupr - Command line frontend for App::DDup

=head1 VERSION

0.001

=head1 DESCRIPTION

Identifying duplicated files in a given directory with the option of removing
the duplicates. Developed as a submission to the DFW hackathon.

=head1 USAGE

Usage:
     ddupr [OPTIONS]

=head1 REQUIRED ARGUMENTS

Required:
    --dir   - Str. Directory to search.

=head1 OPTIONS

Optional:
     --help -? --usage - Bool. Display the usage message and exit
     --man             - Bool. Display man page
     --head_size       - Int. Default=4096. Use this max length
                           (bytes) when looking into a files.
     --block_size      - Int. Default=65536. Use block size
                           (bytes) to reading files.
     --remove          - Bool. Delete the identified duplicates.
     --format          - Str. Default=robot. Output format to use
                           (human or robot).
     --checksum        - Str. Default=Digest::xxHash. Digest
                           algorithm to use (Digest::MD5, Digest::SHA1 or
                           Digest::xxHash). While xxHash is faster, MD5 is more
                           reliable.
     --silent          - Bool. If set, no information will be printed.
     --confirm         - Bool. Default=0. Confirming duplicates. Does a full 
                           file comparation to confirm no hash collisions has 
                           occured. I/O intensive operation.
     --coll_prob       - Bool. Default=0. Calculate the hash
                           collision probability. Currently only available when
                           Digest::xxHash has been used. Note, this might take some
                           processing power to calculate.

=head1 EXIT STATUS

0 or die if a file cannot be opened;

=head1 DIAGNOSTICS

Crital errors are generated in two scenarios:

If a file cannot be opened: the program will "die" (via Carp::confess) and an
error message indicating which file that could not be opened for reading and
an explanation.

If a file cannot be deleted (if the "remove" setting is used): the program
will "die" (via Carp::confess) and an error message indicating which file
could not be removed.

Warning messages are generated (via Carp::carp) if a file handled previously
opened could not be closed, also indicating the file.

=head1 CONFIGURATION

All configuration are controlled via the above mentioned options.

=head1 DEPENDENCIES

=over

=item * List::Util >= 1.33 (for Moose)

=item * Moose

=item * MooseX::Getopt::Usage

=item * MooseX::Getopt::Usage::Role::Man

=item * File::Find::Rule

=item * Class::Load

=item * File::Compare

=item * Digest::xxHash and/or Digest::MD5 and/or Digest::SHA1

=item * Readonly

=item * Perl version 5.10 or higher

=back

=head1 INCOMPATIBILITIES

Currently no known.

=head1 BUGS AND LIMITATIONS

Currently no bugs or limitations known.

=head1 AUTHOR

Joakim Lagerqvist <jokke@cpan.org>

=head1 LICENSE AND COPYRIGHT

This library is free software and may be distributed under the same terms as perl itself.

=cut
